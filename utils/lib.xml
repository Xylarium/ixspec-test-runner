<?xml version="1.0" encoding="UTF-8"?>
<antlib
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
    xmlns:local="http://xylarium.org/ns/ant/macros/utils/ixspec">
    
    
    <macrodef
        name="ixspec-to-xspec"
        description="Convert iXSpec test file to XSpec for XSLT test file."> 
        
        <attribute name="src" />
    	<attribute name="result" default="" />
    	<attribute name="xproc-processor" />
        
        <sequential>                                  
                     
        	<local name="local.step" />        
        	<local name="local.step.name" />
        	<local name="local.step.available" />
        	<property name="local.step" location="${liana.home}/src/xproc/ixspec2xspec.xpl" />        	
        	<basename property="local.step.name" file="${local.step}" suffix=".xpl" />				
        	<available property="local.step.available" file="${local.step}" />			
        	<fail message="$${local.step} not found: ${local.step}" unless:true="${local.step.available}" />
        	
        	<local name="local.result.dir" />
        	<dirname property="local.result.dir" file="@{result}"  />        	 
        	
        	<echoproperties prefix="liana" if:true="${liana.debug}" />
        	<echoproperties prefix="local" if:true="${liana.debug}" />
        	<if>
        		<equals arg1="true" arg2="${liana.debug}" />
        		<then>
        			<echo>@src: @{src}</echo>
        			<echo>@result: @{result}</echo>
        			<echo>@xproc-processor: @{xproc-processor}</echo>
        		</then>
        	</if>
        	
        	<mkdir dir="${local.result.dir}" />
        	
        	<echo message="${line.separator}***${line.separator}Running ${local.step.name} with @{xproc-processor}${line.separator}***" />
        	
            <if>
            	<equals arg1="calabash" arg2="@{xproc-processor}" />
            	<then>
            		
            		<java classname="com.xmlcalabash.app.Main" failonerror="true">					
            			<classpath refid="liana.classpath.calabash" />		        		        		
            			
            			<!-- Config -->
            			<arg value="--configuration:${liana.lib.xproc-processor.calabash.config}" if:set="liana.lib.xproc-processor.calabash.config" />	            			
            			
            			<!-- Ports -->
            			<arg value="--input:text/plain@source=@{src}" />
            			<arg value="--output:result=@{result}" unless:blank="@{result}" />
            			
            			<!-- Processor Switches -->
            			<arg value="--explain" if:true="${liana.debug}" />
            			<arg value="--debug" if:true="${liana.debug}" />            			
            			<arg value="--catalog:${liana.lib.catalogs.default}" />
            			
            			<!-- Pipeline -->
            			<arg value="${local.step}" />      	
            			
            			<!-- Pipeline Options -->
            			<arg value="debug=${liana.debug}" />            			
            		</java>	
            		
            	</then>
            	<elseif>
            		<equals arg1="morgana" arg2="@{xproc-processor}" />
            		<then>
            			
            			<java classname="com.xml_project.morganaxproc3.XProcEngine" failonerror="true">					
            				<classpath refid="liana.classpath.morgana" />		        		        		
            				
            				<!-- Config -->
            				<arg value="-config=${liana.lib.xproc-processor.morgana.config}" if:set="liana.lib.xproc-processor.morgana.config" />		
            				
            				<!-- Pipeline -->
            				<arg value="${local.step}" />   
            				
            				<!-- Pipeline Options -->
            				<arg value="-option:debug=${liana.debug}" />  
            				<arg value="-option:debug-base-dir=${liana.tmp-dir}" />            				            				
            				            				
            				<!-- Processor Switches -->
            				<arg value="-cp" />
            				<arg value="-debug" if:true="${liana.debug}" />
            				<arg value="-catalogs=${liana.lib.catalogs.default}" />
            				
            				<!-- Inputs and outputs -->
            				<arg value="-input:source=@{src}" />
            				<arg value="-output:result=@{result}" />
            				
            			</java>	
            			
            		</then>
            	</elseif>
            	<else>
            		<fail message="Unrecognised or unsupported XProc processor: @{xproc-processor" />
            	</else>
            </if>
        	                     
            
        </sequential>		
    </macrodef>		
	
    
	<macrodef
		name="ixspec-run"
		description="Run an iXSpec test file and return the results."> 
		
		<attribute name="src" />
		<attribute name="result" default="" />
		<attribute name="xproc-processor" />
		
		<sequential>                                  
			
			<local name="local.step" />        
			<local name="local.step.name" />
			<local name="local.step.available" />
			<property name="local.step" location="${liana.home}/src/xproc/ixspec.xpl" />        	
			<basename property="local.step.name" file="${local.step}" suffix=".xpl" />				
			<available property="local.step.available" file="${local.step}" />			
			<fail message="$${local.step} not found: ${local.step}" unless:true="${local.step.available}" />
			
			<local name="local.result.dir" />
			<dirname property="local.result.dir" file="@{result}"  />
			
			<echoproperties prefix="liana" if:true="${liana.debug}" />
			<echoproperties prefix="local" if:true="${liana.debug}" />
			<if>
				<equals arg1="true" arg2="${liana.debug}" />
				<then>
					<echo>@src: @{src}</echo>
					<echo>@result: @{result}</echo>
					<echo>@xproc-processor: @{xproc-processor}</echo>
				</then>
			</if>
			
			<mkdir dir="${local.result.dir}" />
			
			<echo message="${line.separator}***${line.separator}Running ${local.step.name} with @{xproc-processor}${line.separator}***" />
			
			<if>
				<equals arg1="calabash" arg2="@{xproc-processor}" />
				<then>
					
					<java classname="com.xmlcalabash.app.Main" failonerror="true">					
						<classpath refid="liana.classpath.calabash" />		        		        		
						
						<!-- Config -->
						<arg value="--configuration:${liana.lib.xproc-processor.calabash.config}" if:set="liana.lib.xproc-processor.calabash.config" />	            			
						
						<!-- Ports -->
						<arg value="--input:text/plain@source=@{src}" />
						<arg value="--output:result=@{result}" unless:blank="@{result}" />
						
						<!-- Processor Switches -->
						<arg value="--explain" if:true="${liana.debug}" />
						<arg value="--debug" if:true="${liana.debug}" />            			
						<arg value="--catalog:${liana.lib.catalogs.default}" />
						
						<!-- Pipeline -->
						<arg value="${local.step}" />      	
						
						<!-- Pipeline Options -->
						<arg value="xspec-home=${liana.params.xspec-home}" if:set="liana.params.xspec-home" />
						<arg value="compiler-uri=${liana.params.compiler-uri}" if:set="liana.params.compiler-uri" />
						<arg value="compiler-options=${liana.params.compiler-options}" if:set="liana.params.compiler-options" />
						<arg value="log-compiled=${liana.params.log-compiled}" if:set="liana.params.log-compiled" />
						<arg value="formatter-uri=${liana.params.formatter-uri}" if:set="liana.params.formatter-uri" />
						<arg value="formatter-options=${liana.params.formatter-options}" if:set="liana.params.formatter-options" />
						<arg value="serialization-options=${liana.params.serialization-options}" if:set="liana.params.serialization-options" />
						<arg value="log-xml-report=${liana.params.log-xml-report}" if:set="liana.params.log-xml-report" />
						<arg value="log-report=${liana.params.log-report}" if:set="liana.params.log-report" />
						<arg value="log-indented=${liana.params.log-indented}" if:set="liana.params.log-indented" />						
					</java>	
					
				</then>
				<elseif>
					<equals arg1="morgana" arg2="@{xproc-processor}" />
					<then>
						
						<java classname="com.xml_project.morganaxproc3.XProcEngine" failonerror="true">					
							<classpath refid="liana.classpath.morgana" />		        		        		
							
							<!-- Config -->
							<arg value="-config=${liana.lib.xproc-processor.morgana.config}" if:set="liana.lib.xproc-processor.morgana.config" />		
							
							<!-- Pipeline -->
							<arg value="${local.step}" />   
							
							<!-- Pipeline Options -->
							<arg value="-option:debug=${liana.debug}" />  
							<arg value="-option:debug-base-dir=${liana.tmp-dir}" />
							<arg value="-option:xspec-home=${liana.params.xspec-home}" if:set="liana.params.xspec-home" />
							<arg value="-option:compiler-uri=${liana.params.compiler-uri}" if:set="liana.params.compiler-uri" />
							<arg value="-option:compiler-options=${liana.params.compiler-options}" if:set="liana.params.compiler-options" />
							<arg value="-option:log-compiled=${liana.params.log-compiled}" if:set="liana.params.log-compiled" />
							<arg value="-option:formatter-uri=${liana.params.formatter-uri}" if:set="liana.params.formatter-uri" />
							<arg value="-option:formatter-options=${liana.params.formatter-options}" if:set="liana.params.formatter-options" />
							<arg value="-option:serialization-options=${liana.params.serialization-options}" if:set="liana.params.serialization-options" />
							<arg value="-option:log-xml-report=${liana.params.log-xml-report}" if:set="liana.params.log-xml-report" />
							<arg value="-option:log-report=${liana.params.log-report}" if:set="liana.params.log-report" />
							<arg value="-option:log-indented=${liana.params.log-indented}" if:set="liana.params.log-indented" />						
							
							<!-- Processor Switches -->
							<arg value="-cp" />
							<arg value="-catalogs=${liana.lib.catalogs.default}" />
							
							<!-- Inputs and outputs -->
							<arg value="-input:source=@{src}" />
							<arg value="-output:result=@{result}" />
							
						</java>	
						
					</then>
				</elseif>
				<else>
					<fail message="Unrecognised or unsupported XProc processor: @{xproc-processor" />
				</else>
			</if>
			
			
		</sequential>		
	</macrodef>		
    
    
</antlib>