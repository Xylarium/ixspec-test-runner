<?xml version="1.0" encoding="UTF-8"?>
<project
    basedir="."
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
    name="default-targets">
    

	<target
		name="init"
		description="Initialise the build: create directories, call tstamp and other common actions.">
		
		<!-- Create a timestamp property -->
		<tstamp>
			<format property="timestamp.build-start" pattern="yyyyMMddHHmmss" />
		</tstamp>	
			    
		<!-- Create log -->
		<mkdir dir="${base.logs}" />							
		<property name="logfile" location="${base.logs}/${ant.project.name}_${timestamp.build-start}.log" />	    
	    <record name="${logfile}" action="start" append="true" />	    
	    
		<echo>${timestamp.build-start} # ${ant.project.name} # ${ant.project.invoked-targets}</echo>
	    <echo>${ant.version}</echo>
		<echo>Java version: ${ant.java.version}</echo>
	    <echo>Debug: ${debug}</echo>	    	
		<echo>Log file: ${logfile}</echo>			
	    			
	</target>
	
	
	<target
		name="check-dependencies"
		description="Check that known dependencies are available.">
		
		<local name="dependencies.list" />
		<local name="sorted.dependencies.list" />
		
		<propertyselector property="dependencies.list" match="dependencies\.dependency\.[0-9]+" distinct="true" />
		<sortlist property="sorted.dependencies.list" value="${dependencies.list}" />
		
		<for list="${sorted.dependencies.list}" param="dependency">
			<sequential>
				<echo message="Checking Dependency: ${@{dependency}.name}" if:true="${debug}" />
				<if>
					<available file="${@{dependency}.property}" type="${@{dependency}.type}" />
					<then>
						<echo message="..found at: ${@{dependency}.property}" if:true="${debug}" />
					</then>
					<else>
						<fail message="...not found at ${@{dependency}.property} (type: ${@{dependency}.type})" />
					</else>
				</if>
			</sequential>
		</for>
		
	</target>	
	
	
	<target
		name="setup"
		description="Create default directories">		
		
		<mkdir dir="${base.tmp}" />
		<mkdir dir="${base.debug}" if:true="${debug}" />
		
	</target>
	
	
	<target
		name="clean"
		description="Delete ephemeral outputs created by previous runs of this script.">
		
		<delete dir="${base.tmp}" failonerror="false" deleteonexit="true" />
		<delete dir="${base.debug}" failonerror="false" deleteonexit="true" />
		<delete dir="${base.logs}" failonerror="false" deleteonexit="true" />
		
	</target>  
	
    
</project>