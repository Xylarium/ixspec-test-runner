<?xml version="1.0" encoding="UTF-8"?>
<project
    basedir="."
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
    xmlns:li="http://xylarium.org/ns/liana/ant/macros"    
    name="ixspec-test-runner"
    default="all">
    
    
    <!-- #########################
         
         iXML Test Runner
         
         To list the targets in this build file:
         
         $> ant -p
         
         ########################## -->


	<!-- Properties -->
	<xmlproperty
		file="local.properties.xml"
		keeproot="false"
		collapseattributes="true"
		semanticattributes="true" />	
	<xmlproperty
		file="project.properties.xml"
		keeproot="false"
		collapseattributes="true"
		semanticattributes="true" />	
	<xmlproperty
		file="local.args.xml"
		keeproot="true"
		collapseattributes="true"
		semanticattributes="true" />
	
    
	<!-- Import ant-contrib and macro-defs -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.lib.contrib}" />
		</classpath>
	</taskdef>	
	<taskdef file="${basedir}/antlib.xml" uri="http://xylarium.org/ns/liana/ant/macros" />
	

	<target
		name="init"
		description="Initialise the build: create directories, call tstamp and other common actions."
		depends="">
		
		<!-- Create a timestamp property -->
		<tstamp>
			<format property="timestamp.build-start" pattern="yyyyMMddHHmmss" />
		</tstamp>	
			    
		<!-- Create log -->
		<mkdir dir="${base.logs}" />							
		<property name="logfile" location="${base.logs}/${ant.project.name}_${timestamp.build-start}.log" />	    
	    <record name="${logfile}" action="start" append="true" />	    
	    
		<echo>${timestamp.build-start} # ${ant.project.name} # ${ant.project.invoked-targets}</echo>
	    <echo>${ant.version}</echo>
		<echo>Java version: ${ant.java.version}</echo>
	    <echo>Debug: ${debug}</echo>	    	
		<echo>Log file: ${logfile}</echo>			
	    
		<!-- Create dirs -->		
		<mkdir dir="${base.tmp}" />
		<mkdir dir="${base.debug}" />
		<mkdir dir="${base.reports.html}" />		
		<mkdir dir="${base.reports.xml}" />
	    			
	</target>
	
	
	<target
		name="check-dependencies"
		description="Check that known dependencies are available."
		depends="init">
		
		<record name="${logfile}" action="start" append="true" />	
		
		<local name="dependencies.list" />
		<local name="sorted.dependencies.list" />
		
		<propertyselector property="dependencies.list" match="dependencies\.dependency\.[0-9]+" distinct="true" />
		<sortlist property="sorted.dependencies.list" value="${dependencies.list}" />
		
		<for list="${sorted.dependencies.list}" param="dependency">
			<sequential>
				<echo message="Checking Dependency: ${@{dependency}.name}" />
				<if>
					<available file="${@{dependency}.property}" type="${@{dependency}.type}" />
					<then>
						<echo message="..found at: ${@{dependency}.property}" />
					</then>
					<else>
						<fail message="...not found at ${@{dependency}.property} (type: ${@{dependency}.type})" />
					</else>
				</if>
			</sequential>
		</for>
						
	</target>	
	
	
	<target
		name="run-tests">
		
		<record name="${logfile}" action="start" append="true" />	
		
		<echo message="${args.input}" />
		
		<li:xproc
			source="${args.input}"
			pipeline="${xproc.pipeline.ixspec-test-runner}"
			/>
		
	</target>
	
	
	<target
		name="clean"
		description="Delete ephemeral outputs created by previous runs of this script.">
		
		<delete dir="${base.tmp}" failonerror="false" deleteonexit="true" />
		<delete dir="${base.debug}" failonerror="false" deleteonexit="true" />
		<delete dir="${base.logs}" failonerror="false" deleteonexit="true" />
		
	</target>  
	
	
	<target
		name="all"
		depends="clean, init, check-dependencies, run-tests" />			
    
</project>